#!/bin/bash
# Utility for dom- to ensure all updates are regularly installed
set -e
set -u

# Number of VMs to update in parallel. Default is 4,
# which can be memory-intensive.
SECUREDROP_MAX_CONCURRENCY=2


# Ensure elevated privileges
if [[ "$EUID" -ne 0 ]]; then
    echo "Script must be run as root! Exiting..."
    exit 1
fi

# Display GUI feedback about update process
function securedrop-update-feedback() {
    # Unpack msg as arg1
    local msg="$1"
    shift

    # Running `notify-send` as root doesn't work, must be normal user.
    # Setting 60s expire time (in ms) since it's a long-running cmd.
    local qubes_user
    qubes_user="$(id -nu 1000)"
    su "$qubes_user" -c "notify-send \
        --app-name 'SecureDrop Workstation' \
        --icon /usr/share/securedrop/icons/sd-logo.png \
        --expire-time 60000 \
        'SecureDrop: $msg'"
}

# `qubesctl pkg.upgrade` will automatically update dom0 packages, as well,
# but we *first* want the freshest RPMs from dom0, *then* we'll want to
# update the VMs themselves.
securedrop-update-feedback "Updating dom0 configuration..."
sudo qubes-dom0-update -y

securedrop-update-feedback "Updating application..."

# update only fedora template: dist_upgrade is required for debian package
# upgrades and causes fedora template upgrades to fail.

qubesctl --target fedora-29 pkg.upgrade refresh=true

# upgrade all (other) templates
qubesctl --skip-dom0 --templates \
    --max-concurrency "$SECUREDROP_MAX_CONCURRENCY" \
    pkg.upgrade refresh=true dist_upgrade=true

securedrop-update-feedback "Updating VM configuration..."
qubesctl \
    --max-concurrency "$SECUREDROP_MAX_CONCURRENCY" \
    state.highstate

securedrop-update-feedback \
    "Updates installed. Please reboot the workstation \
to ensure the latest security fixes are applied."
